// TODO: Include packages needed for this application
const inquirer = require('inquirer')
const fs = require('fs');
const { makeBadge, ValidationError } = require('badge-maker');
// TODO: Create an array of questions for user input
const questions = [
    {
        type: 'input',
        name: 'title',
        message: 'What is your project title?'
    },
    {
        type: 'input',
        name: 'description',
        message: 'Please provide a project\'s description:'
    },
    {
        type: 'input',
        name: 'installation',
        message: 'Please provide installation instructions:'
    },
    {
        type: 'input',
        name: 'usage',
        message: 'Please provide a usage information:'
    },
    {
        type: 'list',
        name: 'license',
        message: 'Please provide License:',
        choices: ['MIT', 'Apache', 'Boost'],
    },
    {
        type: 'input',
        name: 'contributions',
        message: 'Please provide contribution guidelines:'
    },
    {
        type: 'input',
        name: 'test',
        message: 'Please provide test instructions:'
    },
    {
        type: 'input',
        name: 'github',
        message: 'github name?'
    },
    {
        type: 'input',
        name: 'email',
        message: 'Email Address?'
    }, 
];

// TODO: Create a function to write README file
function writeToFile(fileName, data) {}


function createBadge(){
    const format = {
        label: 'build',
        message: 'passed',
        color: 'green',
      }
      
      const svg = makeBadge(format)
      console.log(svg) // <svg...
      
      try {
        makeBadge({})
      } catch (e) {
        console.log(e) // ValidationError: Field `message` is required
      } 

}
// TODO: Create a function to initialize app
function init() {
    inquirer.prompt(questions)
    .then(answers => {
        let license = '';
        let licenseDescription = '';
        if(answers.license == 'MIT'){
            license = '[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)';
            licenseDescription = 'The MIT license gives express permission for users to reuse code for any purpose, sometimes even if code is part of proprietary software. As long as users include the original copy of the MIT license in their distribution, they can make changes or modifications to the code to suit their own needs.';
        }else if(answers.license == 'Apache'){
            license = '[![License](https://img.shields.io/badge/License-Apache_2.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)';
            licenseDescription = 'You can do what you like with the software, as long as you include the required notices. This permissive license contains a patent license from the contributors of the code.';
        }else if(answers.license == 'Boost'){
            license = '[![License](https://img.shields.io/badge/License-Boost_1.0-lightblue.svg)](https://www.boost.org/LICENSE_1_0.txt)';
            licenseDescription='This is a simple license that includes a clause on warranty, and encourages free and open use of software licensed under it. You must include the original copyright and this license in software unless in the form of “machine-executable object code generated by a source processor.”';
        }else{
            console.log('none of the license');
        }
''
        const test = `${license}\n# ${answers.title} \n## Description\n${answers.description}\n## Table of Contents\n- [Installation](#installation)\n- [Usage](#usage)\n- [License](#license)\n- [Contributions](#contributions)\n- [Tests](#tests)\n- [Questions](#questions)\n## Installation\n${answers.installation}\n## Usage\n${answers.usage}\n## License\n${answers.license}\n${licenseDescription}\n## Contributions\n${answers.contributions}\n## Tests\n${answers.test}\n## Questions\n- GitHub: [${answers.github}](https://github.com/${answers.github})\n- Reach me at:(mailto:${answers.email})`;
        fs.writeFile('new.md', test, err => {
            if (err) {
                console.error(err);
            } else {
                console.log('README file generated successfully!');
            }
        });

    });
}

// Function call to initialize app
init();
